#!/bin/bash

# this script sets up a postfix server to pass mails to a relay-server with sasl-auth.

create_conf() {
	cat << EOF > ./do_postfix-setup.conf
SRC_USER=guenter                        # linux shell-user target
SRC_USER_MAIL=guenter@eb8.org           # mail-target for USER
SRC_SENDER=guenter@eb8sys.top           # mail sender-account on Relay-Server
SRC_SENDER_PASSWD=###############       # Password for the sender-account

TGT_ROOT_MAIL=hostmaster@eb8.org        # mail target for root/HM
TGT_RELAY=my.eb8.org:587                # relay-Server

HOSTNAME=`hostname`                     # client hostname
MYDOMAIN=dei.privat                     # the local domain of the sending host, if one
EOF
}



usage() {
	echo "usage: $(basename $0) [options]
Setup a postfix-server to forward mail to Relay-Host with SASL-Auth.
Relay-Server can be a resolveable Hostname or an IP-Address.

   -c		Use \"Client initiated Connections\" for \"not always on hosts\", like Laptops, VM, etc.
   -f <fileset> Use FileSet <fileset> instead of Default FileSet
   -h           Show this message.
   -j <jobdef>  Use Jobdef <jobdef> instead of Default JobDef
   -l           List all available JobDefs and FileSets
   -m           Mail the updated Config-Docu and config-tarball (use as only switch)
   -s           Setup Bareos-Client SW on the client & copy Director-definition to it. (needs ssh-access)

Docu & config-Tarball are not automatically updated.
Use \"-m\" on it's own at the end of your Setups to mail you the updated configs.

"
exit 0
} # usage

# Main
# Variables sourced from do_postfix-setup.conf
if [ -f ./do_postfix-setup.conf ];  then
	source ./do_postfix-setup.conf
else
	echo "Error: There is no ./do_postfix-setup.conf"
	echo "I created one for you with default-Values."
	echo "Please adapt it to your needs and rerun this script"
	create_conf
	exit 1
fi

# Setup postfix
apt-get install  -y libsasl2-modules bsd-mailx postfix

[ -f /etc/postfix/main.cf ] && {
	mv /etc/postfix/main.cf /etc/postfix/main.cf.sav
}

cat << EOF > /etc/postfix/main.cf
mydomain = $MYDOMAIN
mydestination =
#inet_interfaces = localhost
inet_interfaces = 127.0.0.1
relayhost = $TGT_RELAY
sender_canonical_maps = regexp:/etc/postfix/sender_canonical
recipient_canonical_maps = hash:/etc/postfix/recipient_canonical
smtp_sasl_auth_enable = yes
smtp_sasl_security_options = noanonymous
smtp_sasl_password_maps = hash:/etc/postfix/sasl_passwd
smtp_sasl_mechanism_filter =
smtp_tls_security_level = encrypt
smtp_tls_CAfile = /etc/ssl/certs/ca-certificates.crt
smtp_tls_CApath = /etc/ssl/certs
smtp_header_checks = regexp:/etc/postfix/smtp_header_checks
EOF

cat << EOF > /etc/postfix/sender_canonical
/.+/ $SRC_SENDER
EOF

cat << EOF > /etc/postfix/recipient_canonical
root    $TGT_ROOT_MAIL
$SRC_USER   $SRC_USER_MAIL
@$HOSTNAME.$MYDOMAIN    $TGT_ROOT_MAIL
EOF

cat << EOF > /etc/postfix/sasl_passwd
$TGT_RELAY  $SRC_SENDER:$SRC_SENDER_PASSWD
EOF

cat << EOF > /etc/postfix/smtp_header_checks
# Append the hostname to the email subject
/^Subject: (.*)/ REPLACE Subject: [$HOSTNAME] \${1}
EOF

for i in sasl_passwd recipient_canonical sender_canonical; do
postmap /etc/postfix/$i
done

service postfix restart


